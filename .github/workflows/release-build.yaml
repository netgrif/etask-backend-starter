name: Publish release build
on:
  release:
    types: [ published ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build
        run: mvn clean verify -DskipTests=true

  publish-docker:
    name: Docker build image and publish
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTH_TOKEN }}

      - name: Get Project Version from pom.xml
        uses: entimaniac/read-pom-version-action@1.0.0
        id: getVersion

      - name: Push Version ${{ steps.getVersion.outputs.version }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: netgrif/etask-backend:${{ steps.getVersion.outputs.version }}

      - name: Push Latest
        if:  ${{ !contains(steps.getVersion.outputs.version, '-SNAPSHOT') }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: netgrif/etask-backend:latest

  publish-assets:
    name: Upload Release Assets
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: mvn clean package install -DskipTests=true

      - name: Get Project Version from pom.xml
        uses: entimaniac/read-pom-version-action@1.0.0
        id: getVersion

      - name: Build project
        run: |
          mkdir -p netgrif-etask-${{ steps.getVersion.outputs.version }}/src/main/resources/
          cp target/*-exec.jar netgrif-etask-${{ steps.getVersion.outputs.version }}
          cp -R src/main/resources/*  netgrif-etask-${{ steps.getVersion.outputs.version }}/src/main/resources/
          zip -r netgrif-etask-${{ steps.getVersion.outputs.version }}.zip netgrif-etask-${{ steps.getVersion.outputs.version }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netgrif-etask-${{ steps.getVersion.outputs.version }}.zip
          asset_name: netgrif-etask-${{ steps.getVersion.outputs.version }}.zip
          tag: ${{ github.ref }}
          overwrite: true
